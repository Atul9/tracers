/* automatically generated by rust-bindgen */

pub const MAX_ARGUMENTS: u32 = 6;
pub const SDTError_t_noError: SDTError_t = -1;
pub const SDTError_t_elfCreationError: SDTError_t = 0;
pub const SDTError_t_tmpCreationError: SDTError_t = 1;
pub const SDTError_t_sharedLibraryOpenError: SDTError_t = 2;
pub const SDTError_t_symbolLoadingError: SDTError_t = 3;
pub const SDTError_t_sharedLibraryCloseError: SDTError_t = 4;
pub type SDTError_t = i32;
pub const ArgType_t_noarg: ArgType_t = 0;
pub const ArgType_t_uint8: ArgType_t = 1;
pub const ArgType_t_int8: ArgType_t = -1;
pub const ArgType_t_uint16: ArgType_t = 2;
pub const ArgType_t_int16: ArgType_t = -2;
pub const ArgType_t_uint32: ArgType_t = 4;
pub const ArgType_t_int32: ArgType_t = -4;
pub const ArgType_t_uint64: ArgType_t = 8;
pub const ArgType_t_int64: ArgType_t = -8;
pub type ArgType_t = i32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SDTProbe {
    pub name: *mut ::std::os::raw::c_char,
    pub argFmt: [ArgType_t; 6usize],
    pub _fire: *mut ::std::os::raw::c_void,
    pub provider: *mut SDTProvider,
    pub argCount: ::std::os::raw::c_int,
}
pub type SDTProbe_t = SDTProbe;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SDTProbeList_ {
    pub probe: SDTProbe_t,
    pub next: *mut SDTProbeList_,
}
pub type SDTProbeList_t = SDTProbeList_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SDTProvider {
    pub name: *mut ::std::os::raw::c_char,
    pub probes: *mut SDTProbeList_t,
    pub errno: SDTError_t,
    pub error: *mut ::std::os::raw::c_char,
    pub _handle: *mut ::std::os::raw::c_void,
    pub _filename: *mut ::std::os::raw::c_char,
}
pub type SDTProvider_t = SDTProvider;
extern "C" {
    pub fn providerInit(name: *const ::std::os::raw::c_char) -> *mut SDTProvider_t;
}
extern "C" {
    pub fn providerAddProbe(
        provider: *mut SDTProvider_t,
        name: *const ::std::os::raw::c_char,
        argCount: ::std::os::raw::c_int,
        ...
    ) -> *mut SDTProbe_t;
}
extern "C" {
    pub fn providerLoad(provider: *mut SDTProvider_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn providerUnload(provider: *mut SDTProvider_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn providerDestroy(provider: *mut SDTProvider_t);
}
extern "C" {
    pub fn probeFire(probe: *mut SDTProbe_t, ...);
}
extern "C" {
    pub fn probeIsEnabled(probe: *mut SDTProbe_t) -> ::std::os::raw::c_int;
}
