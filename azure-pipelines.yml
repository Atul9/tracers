# This pipeline stolen shamelessly from https://github.com/nickbabcock/rrinlog
trigger:
  branches:
    include: ['*']
  tags:
    include: ['*']

jobs:
  - job: 'Rustfmt'
    pool:
      vmImage: 'ubuntu-16.04'
    container: 'rust:latest'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    steps:
      - script: rustup component add rustfmt
        displayName: Install Rustfmt
      - script: cargo fmt --all -- --check
        displayName: Run fmt

  - job: 'Test'
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          rustup_toolchain: stable
        mac-stable:
          imageName: 'macos-10.13'
          rustup_toolchain: stable
        linux-stable:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: stable
        linux-beta:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: beta
        linux-nightly:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: nightly
    pool:
      vmImage: $(imageName)
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
          echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        displayName: Install rust (non-Windows)
        condition: ne( variables['Agent.OS'], 'Windows_NT' )

      - script: |
            curl -sSf -o rustup-init.exe https://win.rustup.rs
            rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
            echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
        displayName: Install rust (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )

      - script: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD
          echo "deb https://repo.iovisor.org/apt/$(lsb_release -cs) $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/iovisor.list
          sudo apt-add-repository ppa:lttng/stable-2.10
          sudo apt-get update
          sudo apt-get install build-essential m4
          sudo apt-get install bcc-tools libbcc-examples linux-headers-$(uname -r)
          sudo apt-get install lttng-tools lttng-modules-dkms liblttng-ust-dev
          echo "##vso[task.setvariable variable=PATH;]$PATH:/usr/share/bcc/tools"
        displayName: install Ubuntu dependencies
        condition: eq( variables['Agent.OS'], 'Linux' )

      - script: scripts/build.sh --release --all --features binaries
        displayName: Cargo build (non-Windows)
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: scripts\build.bat --release --all --features binaries
        displayName: Cargo build (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          TRACERS_EXPECTED_DYNAMIC_IMPL=dyn_stap \
          TRACERS_EXPECTED_PROVIDER=tracers_test_probes::dynamic/dyn_stap::0.1.0 \
          scripts/test.sh --manifest-path tracers/Cargo.toml --no-default-features --features=dynamic-tracing
          cargo bench --manifest-path tracers/Cargo.toml --no-default-features --features=dynamic-tracing --no-run
          sudo -E `which cargo` bench --manifest-path tracers/Cargo.toml --no-default-features --features=dynamic-tracing
        displayName: Cargo test dynamic SystemTap implementation (Linux)
        condition: eq( variables['Agent.OS'], 'Linux' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          TRACERS_EXPECTED_DYNAMIC_IMPL=DISABLED \
          TRACERS_EXPECTED_PROVIDER=tracers_test_probes::static/static_noop::0.1.0 \
          scripts/test.sh --manifest-path tracers/Cargo.toml
          cargo bench --manifest-path tracers/Cargo.toml
        displayName: Cargo test default Static NoOp implementation (non-Windows)
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          TRACERS_EXPECTED_DYNAMIC_IMPL=DISABLED \
          TRACERS_EXPECTED_PROVIDER=tracers_test_probes::static/static_stap::0.1.0 \
          scripts/test.sh --manifest-path tracers/Cargo.toml --features=force-static-stap
          cargo bench --manifest-path tracers/Cargo.toml --features=force-static-stap --no-run
          # Must run as root in order to enable probes
          sudo -E `which cargo` bench --manifest-path tracers/Cargo.toml --features=force-static-stap
        displayName: Cargo test Static Stap implementation (Linux)
        condition: eq( variables['Agent.OS'], 'Linux' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          TRACERS_EXPECTED_DYNAMIC_IMPL=DISABLED \
          TRACERS_EXPECTED_PROVIDER=tracers_test_probes::static/static_lttng::0.1.0 \
          scripts/test.sh --manifest-path tracers/Cargo.toml --features=force-static-lttng
          cargo bench --manifest-path tracers/Cargo.toml --features=force-static-lttng
        displayName: Cargo test Static LTTng implementation (Linux)
        condition: eq( variables['Agent.OS'], 'Linux' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          TRACERS_EXPECTED_DYNAMIC_IMPL=DISABLED \
          TRACERS_EXPECTED_PROVIDER=tracers_test_probes::disabled::0.1.0 \
          scripts/test.sh --manifest-path tracers/Cargo.toml --no-default-features
          cargo bench --manifest-path tracers/Cargo.toml --no-default-features
        displayName: Cargo test tracing disabled (non-Windows)
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          echo ##vso[task.setvariable variable=TRACERS_EXPECTED_DYNAMIC_IMPL;]DISABLED
          echo ##vso[task.setvariable variable=TRACERS_EXPECTED_PROVIDER;]tracers_test_probes::static/static_noop::0.1.0
        displayName: Set env vars to test default Static NoOp implementation (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          scripts\test.bat --manifest-path tracers/Cargo.toml
          cargo bench --manifest-path tracers/Cargo.toml
        displayName: Cargo test default Static NoOp implementation (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          echo ##vso[task.setvariable variable=TRACERS_EXPECTED_DYNAMIC_IMPL;]DISABLED
          echo ##vso[task.setvariable variable=TRACERS_EXPECTED_PROVIDER;]tracers_test_probes::disabled::0.1.0
        displayName: Set env vars to  test tracing disabled (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: |
          scripts\test.bat --manifest-path tracers/Cargo.toml --no-default-features
          cargo bench --manifest-path tracers/Cargo.toml --no-default-features
        displayName: Cargo test tracing disabled (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        continueOnError: ne( variables['rustup_toolchain', 'stable'])

      - script: rustup component add clippy && cargo clippy --all-targets --all-features  -- -D warnings
        displayName: Run Clippy linter on Rust code (only on Rust stable)
        condition:  eq( variables['rustup_toolchain'], 'stable' )

